{"version":3,"sources":["components/dropdown.js","components/convert.js","components/translate.js","App.js","reportWebVitals.js","index.js"],"names":["Dropdown","options","selected","onSelectedChange","label","useState","open","setOpen","ref","useRef","useEffect","onBodyClick","event","current","contains","target","document","body","addEventListener","removeEventListener","renderedOptions","map","option","value","className","onClick","Convert","language","text","translated","settranslated","a","axios","post","params","q","key","data","translations","translatedText","doTranslation","Translate","setlanguage","settext","onChange","e","App","setSelected","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bedc0ab5.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\n\r\nconst Dropdown = ({ options, selected, onSelectedChange, label }) => {\r\n\r\n    const [open, setOpen] = useState(false)\r\n    \r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n        const onBodyClick = (event) => {\r\n            if(ref.current.contains(event.target)){\r\n                return;\r\n            }  \r\n            setOpen(false);\r\n            \r\n          };\r\n          \r\n\r\n        document.body.addEventListener(\r\n          \"click\", onBodyClick);\r\n        \r\n        return () => {\r\n            document.body.removeEventListener('click', onBodyClick)\r\n        }\r\n\r\n\r\n            \r\n      }, []);\r\n\r\n    const renderedOptions = options.map((option) => {\r\n        if(option.value === selected.value ){\r\n            return null\r\n        }\r\n        return(\r\n            <div \r\n            key={option.value} \r\n            className=\"item\"\r\n            onClick={() => {\r\n                onSelectedChange(option)\r\n            }}\r\n            >\r\n            {option.label}\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div ref={ref} className='ui form'>\r\n            <div className='field'>\r\n                <label className='label'>{label}</label>\r\n                <div onClick={() => { setOpen(!open) }} className={`ui selection dropdown ${open ? 'visible active' : ''}`}>\r\n                    <i className='dropdown icon'></i>\r\n                    <div className='text'>{selected.label}</div>\r\n                    <div className={`menu ${open ? 'visible transition' : ''}`}>{renderedOptions}</div>\r\n                </div>\r\n            </div>\r\n        \r\n                       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dropdown\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst Convert = ({ language, text }) => {\r\n\r\n    const [translated, settranslated] = useState('')\r\n\r\n    useEffect(() => {\r\n        const doTranslation = async () => {\r\n          const { data } = await  axios.post('https://translation.googleapis.com/language/translate/v2', {}, {\r\n            params:{\r\n                q: text,\r\n                target: language.value,\r\n                key: 'AIzaSyCHUCmpR7cT_yDFHC98CZJy2LTms-IwDlM',\r\n            },\r\n        })\r\n\r\n        settranslated(data.data.translations[0].translatedText)\r\n        }\r\n\r\n        doTranslation()\r\n    }, [language, text])\r\n    \r\n    return (\r\n        <div className='ui header'>\r\n            {translated }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Convert\r\n","import React, { useState } from 'react'\r\nimport Dropdown from './dropdown'\r\nimport Convert from './convert'\r\n\r\n// AIzaSyCHUCmpR7cT_yDFHC98CZJy2LTms-IwDlM\r\n\r\n\r\nconst options = [\r\n    {\r\n        label: 'Afrikaans ',\r\n        value: 'af'\r\n    },\r\n    {\r\n        label: 'Arabic',\r\n        value: 'ar'\r\n    },\r\n    {\r\n        label: 'Hindi',\r\n        value: 'hi'\r\n    }\r\n]\r\n\r\nconst Translate = () => {\r\n\r\n    const [language, setlanguage] = useState(options[0])\r\n    const [text, settext] = useState('')\r\n\r\n    return (\r\n        <div>\r\n        <div className='ui form'>\r\n            <div className='field'></div>\r\n            <label>Enter Text</label>\r\n            <input value={text} onChange={(e) => settext(e.target.value)}></input>\r\n        </div>\r\n        \r\n            <Dropdown \r\n            label={'Select a Language'}\r\n            selected={language} \r\n            onSelectedChange={setlanguage} \r\n            options={options} />\r\n            \r\n            <hr />\r\n            <h3 className='ui header'>Output</h3>\r\n            <Convert text={text} language={language} />\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Translate\r\n","import React, { useState } from \"react\";\nimport Accordion from \"./components/accordion\";\nimport Search from \"./components/search\";\nimport Dropdown from \"./components/dropdown\";\nimport Translate from \"./components/translate\";\n\nconst items = [\n  {\n    title: \"What is React\",\n    content: \"React is frontend javascript framework\",\n  },\n  {\n    title: \"Why use React ?\",\n    content: \"React is favourate\",\n  },\n  {\n    title: \"How do you use React\",\n    content: \"React is used by creating components, Hooks and Redux\",\n  },\n];\n\nconst options = [\n  {\n    label: \"The Color Red\",\n    value: \"red\",\n  },\n  {\n    label: \"The Color Green\",\n    value: \"green\",\n  },\n  {\n    label: \"The Shade of Blue\",\n    value: \"blue\",\n  },\n];\n\nfunction App() {\n  const [selected, setSelected] = useState(options[0]);\n\n  return (\n    <div className=\"App\">\n      <h1>Widget App</h1>\n      <br />\n\n      <Dropdown\n        label={\"Select a Language\"}\n        selected={selected}\n        onSelectedChange={setSelected}\n        options={options}\n      />\n\n      <Translate />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}